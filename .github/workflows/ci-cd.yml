name: CI/CD
on:
  pull_request:
  push:
    branches:
      - main

jobs:
  CI:
    name: Build and unit test

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org/

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npx eslint ./src --max-warnings 0

      - name: Run Prettier
        run: npx prettier --check .

      - name: Build
        run: npm run build

      - name: Run Unit Tests
        run: npm run test:ci

      - name: Codecov
        uses: codecov/codecov-action@v2.1.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: coverage

      - uses: fossas/fossa-action@v1.1.0
        with:
          api-key: ${{ secrets.FOSSA_API_KEY }}

  E2E-tests:
    needs: CI

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        browser: [chrome, firefox]

    name: Run E2E tests on ${{ matrix.os }} in ${{ matrix.browser }}

    runs-on: ${{ matrix.os }}

    env:
      EMAIL_HOST: localhost
      EMAIL_PORT: 2525
      EMAIL_SENDER_NAME: Read Receipt
      EMAIL_SENDER_EMAIL: read.receipt@tobythe.dev
      EMAIL_USER: user
      EMAIL_PASS: pass
      DEV_IP: 95.150.202.188

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org/

      - name: Run E2E Tests
        uses: cypress-io/github-action@v2
        with:
          browser: ${{ matrix.browser }}
          install-command: npm ci
          build: npm run build
          start: npm run start:e2e
          wait-on: http://localhost:3000

  CD:
    needs: E2E-tests
    name: Deploy to Cloud Run

    if: success() && github.ref == 'refs/heads/main'

    environment:
      name: Production
      url: https://read-receipt.tobythe.dev

    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_APP_NAME }}

    steps:
      - uses: actions/checkout@v3

      - name: Login to GCP
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_email: ${{ secrets.GCP_EMAIL }}
          service_account_key: ${{ secrets.GCP_CREDENTIALS }}

      - name: Configure Docker
        run: gcloud auth configure-docker --quiet

      - name: Build Docker image
        run: docker build . -t $IMAGE_NAME

      - name: Push Docker image
        run: docker push $IMAGE_NAME

      - name: Deploy Docker image
        run: gcloud run deploy ${{ secrets.GCP_APP_NAME }} --image $IMAGE_NAME --region europe-west1 --platform managed
