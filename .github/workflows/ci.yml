name: CI

on:
  push:
    branches:
      - renovate/*
  pull_request:
    branches:
      - main
  workflow_call:

env:
  IMAGE_NAME: gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_APP_NAME }}
  ARCHIVE_PATH: ./docker-build.tar

jobs:
  lint:
    name: Lint

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npx eslint ./src ./test --max-warnings 0

      - name: Run Prettier
        run: npx prettier --check .

      - name: Run CSpell
        run: npx cspell **/*.*

  build:
    name: Build

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build . -t $IMAGE_NAME

      - name: Export Docker image
        run: docker save --output $ARCHIVE_PATH $IMAGE_NAME

      - name: Upload Docker image
        uses: actions/upload-artifact@v3
        with:
          name: Build
          path: $ARCHIVE_PATH

  test:
    name: Test

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run Unit Tests
        run: npm run test:ci

      - name: Codecov
        uses: codecov/codecov-action@v3.1.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: coverage

  e2e:
    needs:
      - build

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        browser: [chrome, firefox]

    name: E2E test ${{ matrix.browser }} on ${{ matrix.os }}

    runs-on: ${{ matrix.os }}

    env:
      EMAIL_HOST: localhost
      EMAIL_PORT: 2525
      EMAIL_SENDER_NAME: Read Receipt
      EMAIL_SENDER_EMAIL: read.receipt@tobythe.dev
      EMAIL_USER: user
      EMAIL_PASS: pass
      DEV_IP: 95.150.202.188

    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm

      - name: Download Docker image
        uses: actions/download-artifact@v3
        with:
          name: Build
          path: $ARCHIVE_PATH

      - name: Load Docker image
        run: docker load --input $ARCHIVE_PATH

      - name: Run E2E tests
        uses: cypress-io/github-action@v2
        with:
          browser: ${{ matrix.browser }}
          start: docker run -d -p 3000:3000 $IMAGE_NAME
          wait-on: http://localhost:3000

  licence:
    name: Check licences

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm

      - name: Install dependencies
        run: npm ci

      - uses: fossas/fossa-action@v1.3.1
        with:
          api-key: ${{ secrets.FOSSA_API_KEY }}
